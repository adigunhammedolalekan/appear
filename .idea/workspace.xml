<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ad6f0694-a10c-4580-8825-a0c65c55865f" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Gopkg.lock" beforeDir="false" afterPath="$PROJECT_DIR$/Gopkg.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Gopkg.toml" beforeDir="false" afterPath="$PROJECT_DIR$/Gopkg.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/k8s_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/k8s_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/AUTHORS" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/AUTHORS" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/NOTICE" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/NOTICE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/blkiodev/blkio.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/blkiodev/blkio.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/configs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/configs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_wait.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/container_wait.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/host_config.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/host_config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/container/hostconfig_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/events/events.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/events/events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/parse.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/filters/parse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/mount/mount.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/mount/mount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/network.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/network/network.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/plugin.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/plugin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/plugin_responses.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/plugin_responses.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/port.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/port.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/reference/image_reference.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/authenticate.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/authenticate.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/registry.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/registry/registry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/seccomp.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/seccomp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/strslice/strslice.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/strslice/strslice.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/common.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/common.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/container.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/container.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/network.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/network.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/node.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/node.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/secret.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/secret.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/swarm.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/swarm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/swarm/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/time/duration_convert.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/time/duration_convert.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/time/timestamp.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/time/timestamp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/versions/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/versions/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/versions/compare.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/versions/compare.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/volumes_create.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/api/types/volume/volumes_list.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/checkpoint_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/client_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_attach.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_attach.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_commit.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_commit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_copy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_copy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_diff.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_diff.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_exec.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_exec.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_export.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_export.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_kill.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_kill.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_logs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_logs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_pause.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_pause.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_rename.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_rename.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_resize.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_resize.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_restart.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_restart.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_start.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stats.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stop.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_stop.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_top.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_top.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_unpause.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_unpause.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_wait.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/container_wait.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/disk_usage.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/disk_usage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/events.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/hijack.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/hijack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_build.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_build.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_history.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_history.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_import.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_import.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_load.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_load.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_pull.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_pull.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_push.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_push.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_save.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_save.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_search.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_search.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_tag.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/image_tag.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/info.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/info.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_experimental.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_experimental.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_stable.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/interface_stable.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/login.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/login.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_connect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_connect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_disconnect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_disconnect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/network_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/node_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/ping.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/ping.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_disable.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_disable.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_enable.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_enable.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_install.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_install.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_push.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_push.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_set.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_set.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_upgrade.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/plugin_upgrade.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/secret_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_logs.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_logs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/service_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_get_unlock_key.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_get_unlock_key.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_init.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_join.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_join.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_leave.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_leave.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_unlock.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_unlock.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/swarm_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/task_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/transport.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/transport.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_inspect.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_inspect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_list.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_prune.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_prune.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_remove.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/client/volume_remove.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/contrib/selinux-fedora-24/docker-engine-selinux/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/contrib/selinux-oraclelinux-7/docker-engine-selinux/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/contrib/selinux/docker-engine-selinux/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/generate-authors.sh" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/generate-authors.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/make/.build-deb/docker-engine.docker.default" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/make/.build-deb/docker-engine.docker.init" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/make/.build-deb/docker-engine.docker.upstart" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/hack/make/.build-deb/docker-engine.udev" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_other.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_other.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/archive_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_other.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_other.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/changes_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/copy_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/diff.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/diff.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/example_changes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/example_changes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/time_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/time_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/time_unsupported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/time_unsupported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/whiteouts.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/whiteouts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/wrap.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/archive/wrap.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_darwin.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_darwin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/fileutils/fileutils_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/idtools_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/usergroupadd_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/usergroupadd_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/usergroupadd_unsupported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/usergroupadd_unsupported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/utils_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/idtools/utils_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/buffer.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/buffer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/bytespipe.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/bytespipe.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/fmt.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/fswriters.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/fswriters.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/multireader.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/readers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/readers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/temp_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/temp_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/temp_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/temp_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/writeflusher.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/writeflusher.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/writers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/ioutils/writers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/longpath/longpath.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/longpath/longpath.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/pools/pools.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/pools/pools.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/promise/promise.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/symlink/LICENSE.APACHE" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/symlink/LICENSE.APACHE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/symlink/LICENSE.BSD" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/symlink/LICENSE.BSD" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/chtimes_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/events_windows.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/exitcode.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/exitcode.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/filesys.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/filesys_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/filesys_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/lstat.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/lstat_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/lstat_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_unsupported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_unsupported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/meminfo_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/mknod.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/mknod.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/mknod_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/mknod_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/path_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/path_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/path_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/path_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_darwin.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_darwin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_freebsd.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_freebsd.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_openbsd.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_openbsd.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_solaris.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_unsupported.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/stat_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/syscall_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/syscall_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/syscall_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/syscall_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/umask.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/umask.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/umask_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/umask_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/utimes_freebsd.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/utimes_linux.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/utimes_unsupported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/utimes_unsupported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/xattrs_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/xattrs_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/xattrs_unsupported.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/system/xattrs_unsupported.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/tlsconfig/tlsconfig_clone.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/tlsconfig/tlsconfig_clone_go16.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/pkg/tlsconfig/tlsconfig_clone_go17.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/docker/docker/project/CONTRIBUTORS.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/golang.org/x/net/context/ctxhttp/ctxhttp.go" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.12.7/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoDepProject">
    <integration-enabled>true</integration-enabled>
    <exec-path>/usr/local/bin/dep</exec-path>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1PevalsP7KQryXaptQt6BOpAn9G" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.dep.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/fn" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/server" />
      <recent name="$PROJECT_DIR$/build" />
      <recent name="$PROJECT_DIR$/exp/server" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/git-apache" />
      <recent name="$PROJECT_DIR$/exp/server/build" />
      <recent name="$PROJECT_DIR$/exp" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.go test github.com/adigunhammedolalekan/paas/types">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/" />
      <package value="github.com/adigunhammedolalekan/paas" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/adigunhammedolalekan/paas" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="github.com/adigunhammedolalekan/paas" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="TestDockerService_PushImage in github.com/adigunhammedolalekan/paas/build" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/build" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/adigunhammedolalekan/paas/build" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestDockerService_PushImage$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMap in github.com/adigunhammedolalekan/paas/server" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/server" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/adigunhammedolalekan/paas/server" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestMap$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/adigunhammedolalekan/paas" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/adigunhammedolalekan/paas/types" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="appear" />
      <working_directory value="$PROJECT_DIR$/types" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/adigunhammedolalekan/paas/types" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build github.com/adigunhammedolalekan/paas" />
      <item itemvalue="Go Test.TestDockerService_PushImage in github.com/adigunhammedolalekan/paas/build" />
      <item itemvalue="Go Test.TestMap in github.com/adigunhammedolalekan/paas/server" />
      <item itemvalue="Go Test.go test github.com/adigunhammedolalekan/paas/types" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test github.com/adigunhammedolalekan/paas/types" />
        <item itemvalue="Go Build.go build github.com/adigunhammedolalekan/paas" />
        <item itemvalue="Go Test.TestMap in github.com/adigunhammedolalekan/paas/server" />
        <item itemvalue="Go Test.TestDockerService_PushImage in github.com/adigunhammedolalekan/paas/build" />
      </list>
    </recent_temporary>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>